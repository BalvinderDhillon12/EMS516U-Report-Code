int servoPin = 2;
Servo servo;
const int pingPin = 3;
unsigned int duration,inches;
int leftscan,centerscan,rightscan;
boolean scan = true;
int LEDPin =  53;                  // Status LED connected to digital pin 13
int row = 0;
int column = 0;
int columnrobot = 5;
int rowrobot = 20;
int uTurn = 0;
int Movement = 0;
int MinimumSafeDistance = 10;
char Direction;
// Unknown Maze Function //
void UnknownMap()
{
// Making an 2D array of the unknown Maze //
row = 0;
column = 0;
for(row = 0;row < 22;row++)
{
 for(column = 0;column < 22;column++)
 {
 Serial.print(UnknownMaze[row][column]);
 Serial.print(' ');
 Serial1.write(UnknownMaze[row][column]);
 Serial1.write(' ');
 Serial2.write(UnknownMaze[row][column]);
 Serial2.write(' ');
 }
 Serial.print("\n");
 Serial1.write("\n");
 Serial2.write("\n");
}
Serial.print("\n");
Serial1.write("\n");
Serial2.write("\n");
}
// Solved Maze Function //
void SolvedMap()
{
// Making an 2D array of the Solved Maze //
row = 0;
column = 0;
for(row = 0;row < 22;row++)
{
 for(column = 0;column < 22;column++)
 {
 Serial.print(SolvedMaze[row][column]);
 Serial.print(' ');
 Serial1.write(SolvedMaze[row][column]);
 Serial1.write(' ');
 Serial2.write(SolvedMaze[row][column]);
 Serial2.write(' ');
 }
 Serial.print("\n");
 Serial1.write("\n");
 Serial2.write("\n");
 }
 Serial.print("\n");
 Serial1.write("\n");
 Serial2.write("\n");
}
// Main Program where it's being performed once:
void setup()
{
 pinMode(LEDPin, OUTPUT);         // Set the Pin to output
 servo.attach(servoPin);          // Set the Servo pin to output
 Serial.begin(9600);              // Setting the baud for serial monitor
 Serial1.begin(9600);             // Setting the baud for bluetooth
 Serial2.begin(9600);             // Setting the baud for OpenLog
 delay(1000);                     // Wait a second for OpenLog to initiate
 // Printing Unknown Maze map
 Serial.print("Unknown MAZE");
 Serial.print("\n");
 Serial1.write("Unknown MAZE");
 Serial1.write("\n");
 Serial2.write("Unknown MAZE");
 Serial2.write("\n");
 UnknownMap();                   // Call the unknown map Function
 // Printing Solved Maze map
 Serial.print("Solved Maze");
 Serial.print("\n");
 Serial1.write("Solved Maze");
 Serial1.write("\n");
 Serial2.write("Solved Maze");
 Serial2.write("\n");
 SolvedMaze[21][5] = 'S';        // Set the entrance of the robot
 SolvedMap();                    // Call the solved map Function
}
void loop() {
 // put your main code here, to run repeatedly:
// Initialising Varaibles //
  int leftscan;
  int centerscan;
  int rightscan;
  int MinimumSafeDistance = 10;
  // Scanning the Perimeter //
  // Scan Left //
  servo.write(180);                      // Rotating the servo to 180 degrees
  delay(2000);                           // Adding Delay to extend the durtation for the servo motor to be at an angle of 180 degrees
   leftscan = Sensor();                   // Using the Sensor function to detect if there is wall or not
  leftscan = inches;                     // Equating the distance to the leftscan variable
  Serial.print("LeftScan: ");
  Serial.println(leftscan);
  // Scan Center //
  servo.write(90);                       // Rotating the servo to 90 degrees
  delay(2000);                           // Adding Delay to extend the durtation for the servo motor to be at an angle of 90 degrees
  centerscan = Sensor();                 // Using the Sensor function to detect if there is wall or not
  centerscan = inches;                   // Equating the distance to the centerscan variable
  Serial.print("CenterScan: ");
  Serial.println(centerscan);
  // Scan Right //
  servo.write(0);                        // Rotating the servo to 0 degrees
  delay(2000);                           // Adding Delay to extend the durtation for the servo motor to be at an angle of 0 degrees
  rightscan = Sensor();                  // Using the Sensor function to detect if there is wall or not
  rightscan = inches;                    // Equating the distance to the rightscan variable
  Serial.print("RightScan: ");
  Serial.println(rightscan);
  // Return To Center //
  servo.write(90);                       // Rotating the servo to 90 degrees
  delay(5000);                           // Adding Delay to extend the durtation for the servo motor to be at an angle of 90 degrees
  // Direction Change //
  if (leftscan > MinimumSafeDistance)
   {
     Direction = 'L';
     Serial.print("Direction: ");
     Serial.println(Direction);
     Left();
     Serial1.write(Direction);
   }
   else if (leftscan < MinimumSafeDistance)
  {
   Direction = 'F';
   Serial.print("Direction: ");
   Serial.println(Direction);
   Forward();
   Serial1.write(Direction);
  }
   else if (leftscan < MinimumSafeDistance && centerscan < MinimumSafeDistance)
   {
     Direction = 'R';
     Serial.print("Direction: ");
     Serial.println(Direction);
     Right();
     Serial1.write(Direction);
   }
   else
   {
     Direction = 'B';
     Serial.print("Direction: ");
     Serial.println(Direction);
     Backward();
     Serial1.write(Direction);
   }
}
